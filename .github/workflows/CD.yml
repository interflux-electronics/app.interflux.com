---
name: Continuous Deployment

on:
  push:
    branches:
      - 'production'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: 'yarn install'
      - run: 'yarn test'

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test
    env:
      PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
      URL: bot@server.interflux.com
      ROOT: /var/www/app.interflux.com
    steps:
      - uses: actions/checkout@v2
      - run: mkdir ~/.ssh
      - run: 'echo "$PRIVATE_KEY" > ~/.ssh/bot@server.interflux.com'
      - run: ssh-keyscan -H server.interflux.com > ~/.ssh/known_hosts
      - run: chmod 0755 ~/.ssh/
      - run: chmod 600 ~/.ssh/bot@server.interflux.com
      - run: chmod 644 ~/.ssh/known_hosts
      - run: ssh $URL "cd $ROOT; git checkout production; git pull"
      - run: ssh $URL "cd $ROOT; nvm install"
      - run: ssh $URL "cd $ROOT; yarn install"
      - run: ssh $URL "cd $ROOT; yarn build"
      # - run: sudo apt-get install jq
      # - run: echo "REVISION=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      # - run: echo "BUILD="builds/$BRANCH/$REVISION/"" >> $GITHUB_ENV
      # - run: "echo \"JSON=$(curl --silent https://api.interflux.com/sanity-check -H 'Content-Type: application/vnd.api+json')\" >> $GITHUB_ENV"
      # - run: 'echo "$JSON" | jq .'
      # - run: 'echo "STATUS=$(echo "$JSON" | jq .status)" >> $GITHUB_ENV'
      # - run: 'echo "API_REVISION=$(echo "$JSON" | jq -r .build.git.revision)" >> $GITHUB_ENV'
      # Fail the work flow, something is wrong.
      # - name: 'Sanity check: FAIL'
      #   run: exit -1
      #   if: env.API_REVISION != env.REVISION || env.STATUS != 200
      # All green, deploy was successful!
      # - name: 'Sanity check: PASS'
      #   if: env.API_REVISION == env.REVISION && env.STATUS == 200
      #   run: exit 0
      # - run: remote/deploy.sh
      # git checkout production
      # git pull
      # nvm install
      # yarn install
      # yarn build
